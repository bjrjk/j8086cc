; 8086 ASM Generated by j8086cc, Jack Ren
; Call Convention:
; AX Caller Save
; Others Callee Save
; Parameter Passing Convention: _stdcall
; [BP] -> previous BP
; 2[BP] -> return address
; 4[BP] -> first parameter
; 6[BP] -> second parameter
; ...

PUSH_REGS MACRO
	pushf
	push BX
	push CX
	push DX
	push SI
	push DI
ENDM

POP_REGS MACRO
	pop DI
	pop SI
	pop DX
	pop CX
	pop BX
	popf
ENDM

PROTECT_SITE MACRO
	push BP
	mov BP,SP
	PUSH_REGS
ENDM

RESTORE_SITE MACRO POP_BYTES
	POP_REGS
	mov SP,BP
	pop BP
	ret POP_BYTES
ENDM

data segment

data ends

stack segment para stack
	DB 1000H Dup(0)
stack ends

code segment
	assume cs:code,ds:data,ss:stack
	
putchar PROC
	; void putchar(char ASCIICode)
	; Print an ASCII Character via DOS SysCall No.2
	PROTECT_SITE
	mov AX,4H[BP]
	mov DL,AL
	mov AH,02h
	int 21h
	RESTORE_SITE 2
putchar ENDP

getchar PROC
	; char getchar(void)
	; Get an ASCII Character via DOS SysCall No.1
	; Return Value: ASCII char code in AL
	mov AH,01h
	int 21h
	mov AH,0
	ret
getchar ENDP
	
isNumeric PROC
PROTECT_SITE
add SP,-26
;movi$TMPVAR_i_2_@t0$,48
mov WORD PTR [BP-14],48
;le$TMPVAR_i_2_@t1$,$TMPVAR_i_2_@t0$,$PARAMVAR_i_2_@ASCII$
mov AX,WORD PTR [BP-14]
cmp AX, WORD PTR [BP+4]
jle LI1
mov WORD PTR [BP-16],0
jmp LI2
LI1:
mov WORD PTR [BP-16],1
LI2:
;movi$TMPVAR_i_2_@t2$,57
mov WORD PTR [BP-18],57
;le$TMPVAR_i_2_@t3$,$PARAMVAR_i_2_@ASCII$,$TMPVAR_i_2_@t2$
mov AX,WORD PTR [BP+4]
cmp AX, WORD PTR [BP-18]
jle LI3
mov WORD PTR [BP-20],0
jmp LI4
LI3:
mov WORD PTR [BP-20],1
LI4:
;land$TMPVAR_i_2_@t4$,$TMPVAR_i_2_@t1$,$TMPVAR_i_2_@t3$
cmp WORD PTR [BP-16],0
jz LI5
cmp WORD PTR [BP-20],0
jz LI5
mov WORD PTR [BP-22],1
jmp LI6
LI5:
mov WORD PTR [BP-22],0
LI6:
;jz$TMPVAR_i_2_@t4$,L0
mov AX,WORD PTR [BP-22]
cmp AX,0
jz L0
;movi$TMPVAR_i_2_@t5$,1
mov WORD PTR [BP-24],1
;ret$TMPVAR_i_2_@t5$
mov AX,[BP-24]
jmp LI0
L0:
;movi$TMPVAR_i_2_@t6$,0
mov WORD PTR [BP-26],0
;ret$TMPVAR_i_2_@t6$
mov AX,[BP-26]
jmp LI0
LI0:
sub SP,-26
RESTORE_SITE 2
isNumeric ENDP
getint PROC
PROTECT_SITE
add SP,-47
;movi$TMPVAR_i_2_@t7$,0
mov WORD PTR [BP-20],0
;mov$LOCALVAR_i_2_@num$,$TMPVAR_i_2_@t7$
mov AX,[BP-20]
mov [BP-14],AX
;movi$TMPVAR_i_2_@t8$,0
mov WORD PTR [BP-22],0
;mov$LOCALVAR_i_2_@flag$,$TMPVAR_i_2_@t8$
mov AX,[BP-22]
mov [BP-16],AX
L1:
;movi$TMPVAR_i_2_@t9$,1
mov WORD PTR [BP-24],1
;jz$TMPVAR_i_2_@t9$,L2
mov AX,WORD PTR [BP-24]
cmp AX,0
jz L2
;callgetchar,$TMPVAR_c_1_@t10$
call getchar
mov WORD PTR [BP-25], AX
;mov$LOCALVAR_i_2_@c$,$TMPVAR_c_1_@t10$
mov AL,[BP-25]
mov [BP-18],AX
;callisNumeric,$TMPVAR_i_2_@t11$,$LOCALVAR_i_2_@c$
mov AX,WORD PTR [BP-18]
push AX
call isNumeric
mov WORD PTR [BP-27], AX
;jz$TMPVAR_i_2_@t11$,L3
mov AX,WORD PTR [BP-27]
cmp AX,0
jz L3
;movi$TMPVAR_i_2_@t12$,1
mov WORD PTR [BP-29],1
;mov$LOCALVAR_i_2_@flag$,$TMPVAR_i_2_@t12$
mov AX,[BP-29]
mov [BP-16],AX
L3:
;callisNumeric,$TMPVAR_i_2_@t13$,$LOCALVAR_i_2_@c$
mov AX,WORD PTR [BP-18]
push AX
call isNumeric
mov WORD PTR [BP-31], AX
;lnot$TMPVAR_i_2_@t14$,$TMPVAR_i_2_@t13$
cmp WORD PTR [BP-31],0
jz LI8
mov WORD PTR [BP-33],0
jmp LI9
LI8:
mov WORD PTR [BP-33],1
LI9:
;jz$TMPVAR_i_2_@t14$,L4
mov AX,WORD PTR [BP-33]
cmp AX,0
jz L4
;movi$TMPVAR_i_2_@t15$,1
mov WORD PTR [BP-35],1
;eq$TMPVAR_i_2_@t16$,$LOCALVAR_i_2_@flag$,$TMPVAR_i_2_@t15$
mov AX,WORD PTR [BP-16]
cmp AX, WORD PTR [BP-35]
je LI10
mov WORD PTR [BP-37],0
jmp LI11
LI10:
mov WORD PTR [BP-37],1
LI11:
;jz$TMPVAR_i_2_@t16$,L5
mov AX,WORD PTR [BP-37]
cmp AX,0
jz L5
;jmpL2
jmp L2
L5:
;jmpL1
jmp L1
L4:
;movi$TMPVAR_i_2_@t17$,10
mov WORD PTR [BP-39],10
;mul$TMPVAR_i_2_@t18$,$LOCALVAR_i_2_@num$,$TMPVAR_i_2_@t17$
mov AX,WORD PTR [BP-14]
imul WORD PTR [BP-39]
mov [BP-41],AX
;mov$LOCALVAR_i_2_@num$,$TMPVAR_i_2_@t18$
mov AX,[BP-41]
mov [BP-14],AX
;movi$TMPVAR_i_2_@t19$,48
mov WORD PTR [BP-43],48
;sub$TMPVAR_i_2_@t20$,$LOCALVAR_i_2_@c$,$TMPVAR_i_2_@t19$
mov AX,WORD PTR [BP-18]
sub AX,WORD PTR [BP-43]
mov [BP-45],AX
;add$TMPVAR_i_2_@t21$,$LOCALVAR_i_2_@num$,$TMPVAR_i_2_@t20$
mov AX,WORD PTR [BP-14]
add AX,WORD PTR [BP-45]
mov [BP-47],AX
;mov$LOCALVAR_i_2_@num$,$TMPVAR_i_2_@t21$
mov AX,[BP-47]
mov [BP-14],AX
;jmpL1
jmp L1
L2:
;ret$LOCALVAR_i_2_@num$
mov AX,[BP-14]
jmp LI7
LI7:
sub SP,-47
RESTORE_SITE 0
getint ENDP
putintRec PROC
PROTECT_SITE
add SP,-36
;movi$TMPVAR_i_2_@t22$,0
mov WORD PTR [BP-16],0
;eq$TMPVAR_i_2_@t23$,$PARAMVAR_i_2_@x$,$TMPVAR_i_2_@t22$
mov AX,WORD PTR [BP+4]
cmp AX, WORD PTR [BP-16]
je LI13
mov WORD PTR [BP-18],0
jmp LI14
LI13:
mov WORD PTR [BP-18],1
LI14:
;jz$TMPVAR_i_2_@t23$,L6
mov AX,WORD PTR [BP-18]
cmp AX,0
jz L6
;movi$TMPVAR_i_2_@t24$,0
mov WORD PTR [BP-20],0
;ret$TMPVAR_i_2_@t24$
mov AX,[BP-20]
jmp LI12
L6:
;movi$TMPVAR_i_2_@t25$,10
mov WORD PTR [BP-22],10
;mod$TMPVAR_i_2_@t26$,$PARAMVAR_i_2_@x$,$TMPVAR_i_2_@t25$
mov DX,0
mov AX,WORD PTR [BP+4]
idiv WORD PTR [BP-22]
mov [BP-24],DX
;mov$LOCALVAR_i_2_@tmp$,$TMPVAR_i_2_@t26$
mov AX,[BP-24]
mov [BP-14],AX
;movi$TMPVAR_i_2_@t28$,10
mov WORD PTR [BP-26],10
;div$TMPVAR_i_2_@t29$,$PARAMVAR_i_2_@x$,$TMPVAR_i_2_@t28$
mov DX,0
mov AX,WORD PTR [BP+4]
idiv WORD PTR [BP-26]
mov [BP-28],AX
;callputintRec,$TMPVAR_i_2_@t27$,$TMPVAR_i_2_@t29$
mov AX,WORD PTR [BP-28]
push AX
call putintRec
mov WORD PTR [BP-30], AX
;movi$TMPVAR_i_2_@t31$,48
mov WORD PTR [BP-32],48
;add$TMPVAR_i_2_@t32$,$LOCALVAR_i_2_@tmp$,$TMPVAR_i_2_@t31$
mov AX,WORD PTR [BP-14]
add AX,WORD PTR [BP-32]
mov [BP-34],AX
;callputchar,$TMPVAR_i_2_@t30$,$TMPVAR_i_2_@t32$
mov AX,WORD PTR [BP-34]
push AX
call putchar
mov WORD PTR [BP-36], AX
LI12:
sub SP,-36
RESTORE_SITE 2
putintRec ENDP
putint PROC
PROTECT_SITE
add SP,-24
;movi$TMPVAR_i_2_@t33$,0
mov WORD PTR [BP-14],0
;eq$TMPVAR_i_2_@t34$,$PARAMVAR_i_2_@x$,$TMPVAR_i_2_@t33$
mov AX,WORD PTR [BP+4]
cmp AX, WORD PTR [BP-14]
je LI16
mov WORD PTR [BP-16],0
jmp LI17
LI16:
mov WORD PTR [BP-16],1
LI17:
;jz$TMPVAR_i_2_@t34$,L7
mov AX,WORD PTR [BP-16]
cmp AX,0
jz L7
;movi$TMPVAR_i_2_@t36$,48
mov WORD PTR [BP-18],48
;callputchar,$TMPVAR_i_2_@t35$,$TMPVAR_i_2_@t36$
mov AX,WORD PTR [BP-18]
push AX
call putchar
mov WORD PTR [BP-20], AX
;movi$TMPVAR_i_2_@t37$,0
mov WORD PTR [BP-22],0
;ret$TMPVAR_i_2_@t37$
mov AX,[BP-22]
jmp LI15
L7:
;callputintRec,$TMPVAR_i_2_@t38$,$PARAMVAR_i_2_@x$
mov AX,WORD PTR [BP+4]
push AX
call putintRec
mov WORD PTR [BP-24], AX
LI15:
sub SP,-24
RESTORE_SITE 2
putint ENDP
main PROC
mov AX,data
mov DS,AX
mov BP,SP
add SP,-24
;callgetint,$TMPVAR_i_2_@t39$
call getint
mov WORD PTR [BP-18], AX
;mov$LOCALVAR_i_2_@x$,$TMPVAR_i_2_@t39$
mov AX,[BP-18]
mov [BP-14],AX
;callgetint,$TMPVAR_i_2_@t40$
call getint
mov WORD PTR [BP-20], AX
;mov$LOCALVAR_i_2_@y$,$TMPVAR_i_2_@t40$
mov AX,[BP-20]
mov [BP-16],AX
;add$TMPVAR_i_2_@t42$,$LOCALVAR_i_2_@x$,$LOCALVAR_i_2_@y$
mov AX,WORD PTR [BP-14]
add AX,WORD PTR [BP-16]
mov [BP-22],AX
;callputint,$TMPVAR_i_2_@t41$,$TMPVAR_i_2_@t42$
mov AX,WORD PTR [BP-22]
push AX
call putint
mov WORD PTR [BP-24], AX
LI18:
sub SP,-24
mov AH,4Ch
mov AL,0
int 21h
main ENDP

code ends

end main